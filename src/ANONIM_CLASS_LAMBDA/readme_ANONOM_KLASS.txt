Анонимный класс в Java — это класс, который не имеет имени и объявляется и инстанцируется одновременно.
 Они позволяют вам создавать одноразовые реализации классов,
 обычно для интерфейсов или абстрактных классов, непосредственно в месте использования.

 Основные характеристики:
 Безымянный: Анонимные классы не имеют имени.
 Локальный: Анонимные классы объявляются внутри метода, конструкторе или блоке кода.
 Ограниченный: Анонимные классы имеют доступ к переменным из охватывающей области,
 но эти переменные должны быть финальными или эффективно финальными (не изменяться после инициализации).

 Зачем нужен анонимный класс?
 Краткость и удобство: Уменьшает количество кода, когда вам нужна одноразовая реализация
 интерфейса или абстрактного класса.

 Читаемость и структурированность: Делает код более компактным и читабельным,
  так как реализация находится непосредственно в месте использования.
 Замена интерфейсов: Часто используется для создания обратных вызовов,
 обработчиков событий и других случаев, где требуется передать блок кода.


abstract class Animal {
    abstract void makeSound();
}

public class Main {
    public static void main(String[] args) {
        // Анонимный класс, расширяющий абстрактный класс Animal
        Animal myAnimal = new Animal() {
            @Override
            void makeSound() {
                System.out.println("Anonymous animal sound");
            }
        };

        myAnimal.makeSound();
    }
}

