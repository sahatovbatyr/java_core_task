 abstract class MyClass {
     abstract void myMethod();
 }

//это по старому
 MyClass myClass = new MyClass(){
 ......
 }

// по новому
 MyClass myClass = () -> {
 }

 *******************************************************************************
 Лямбда-выражения в Java — это способ написать анонимные КЛАССЫ  и анонимные функции
  (или функциональные интерфейсы) более кратко и читабельно.
  Они были введены в Java 8 и позволяют передавать поведение в качестве параметра,
   что особенно полезно для обработки коллекций и работы с потоками данных (streams).

   Лямбда-выражение не выполняется само по себе, а образует реализацию метода,
   определенного в функциональном интерфейсе. При этом важно, что функциональный интерфейс
    должен содержать только один единственный метод без реализации.

   **************************************************************************

   Основные характеристики анонимных функций (лямбда-выражений)
   Отсутствие имени: Анонимные функции не имеют имени.
   Краткость: Позволяют писать функции компактно и выразительно.
   Передача поведения: Используются для передачи поведения (функций) в качестве параметров методов.

**********************************************************************************
   Синтаксис лямбда-выражений в Java:

1)  oneParameter -> expression
2)  (parameters) -> expression
2) (parameters) -> { statements; }


