1. Основы многопоточности
Задача 1
Создайте программу, в которой два потока выводят числа от 1 до 10 поочередно.
Первый поток выводит нечетные числа, второй - четные.

Задача 2
Напишите программу, в которой пять потоков одновременно выводят числа от 1 до 100.
 Обратите внимание на синхронизацию вывода, чтобы числа не пересекались.

Задача 3
Создайте программу, которая создает и запускает 10 потоков,
 каждый из которых выводит свое имя и завершает работу.

Задача 4
Напишите программу, которая создает три потока: один поток увеличивает значение переменной на 1,
второй - уменьшает на 1, а третий - выводит текущее значение переменной каждые 100 мс.

Задача 5
Реализуйте программу, которая создает четыре потока, каждый из которых выполняет
 вычисление суммы элементов своей части массива. После завершения вычислений все
 потоки должны объединить результаты и вывести общую сумму.

2. Синхронизация потоков
Задача 1
Создайте программу, в которой два потока увеличивают значение общей переменной на
1 миллион раз. Используйте мьютекс для синхронизации доступа к переменной.

Задача 2
Напишите программу, в которой три потока работают с общей очередью. Первый поток
 добавляет элементы в очередь, второй - удаляет элементы, третий - выводит текущее состояние очереди.

Задача 3
Реализуйте программу, в которой два потока работают с общей переменной-счетчиком:
 первый поток увеличивает значение счетчика до 100, второй - уменьшает значение
 счетчика до 0. Используйте семафор для синхронизации.

Задача 4
Создайте программу, в которой три потока работают с общим буфером фиксированного размера. Первый поток добавляет элементы в буфер, второй - удаляет элементы из буфера, третий - выводит текущее состояние буфера. Используйте условные переменные для синхронизации.

Задача 5
Напишите программу, в которой пять потоков работают с общей структурой данных (например, список). Используйте читалку-писалку (Reader-Writer Lock) для синхронизации доступа.

3. Deadlock и livelock
Задача 1
Напишите программу, демонстрирующую взаимную блокировку (deadlock) между двумя потоками, работающими с двумя ресурсами.

Задача 2
Реализуйте программу, которая демонстрирует избегание deadlock при помощи таймаута блокировки.

Задача 3
Создайте программу, в которой три потока работают с тремя ресурсами и могут попасть в состояние взаимной блокировки. Найдите способ избежать этого состояния.

Задача 4
Напишите программу, демонстрирующую проблему livelock: два потока постоянно меняют свое состояние, не выполняя полезной работы.

Задача 5
Реализуйте программу, демонстрирующую метод предотвращения livelock, используя случайные задержки или другие техники.

4. Параллельные алгоритмы
Задача 1
Напишите программу, реализующую параллельное вычисление суммы элементов массива, разделив массив на части и используя несколько потоков.

Задача 2
Создайте программу, реализующую параллельную сортировку массива, используя сортировку слиянием (merge sort) и несколько потоков.

Задача 3
Реализуйте параллельный алгоритм умножения матриц, разделив операции
умножения на блоки и распределив их между несколькими потоками.

Задача 4
Напишите программу, которая реализует параллельное нахождение максимального элемента в массиве, разделив массив на части и используя несколько потоков.

Задача 5
Создайте программу, реализующую параллельный поиск элементов в большом массиве, разделив массив на части и распределив поиск между несколькими потоками.

5. Пул потоков и задачи
Задача 1
Создайте программу, использующую пул потоков для выполнения 10 задач, каждая из которых вычисляет факториал числа.

Задача 2
Напишите программу, использующую пул потоков для загрузки содержимого 20 веб-страниц параллельно. Каждая задача должна возвращать размер загруженной страницы.

Задача 3
Реализуйте программу, которая использует пул потоков для выполнения 50 задач, каждая из которых выполняет случайную задержку (sleep) и возвращает свое время выполнения.

Задача 4
Создайте программу, которая использует пул потоков для выполнения задач сортировки различных частей большого массива. Затем объедините отсортированные части в один массив.

Задача 5
Напишите программу, использующую пул потоков для выполнения вычислений значений ряда Фибоначчи для заданных входных данных параллельно.